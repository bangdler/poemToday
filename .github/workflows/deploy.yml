# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  push:
    branches: [be_deploy]
  pull_request:
    branches: [be_deploy]

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [16.17.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Npm -v
        run: npm -v

      - name: create env file
        working-directory: ./BE
        run: |
          pwd
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo NODEMAILER_USER=${{ secrets.NODEMAILER_USER }} >> .env
          echo NODEMAILER_PASSWORD=${{ secrets.NODEMAILER_PASSWORD }} >> .env
          cat .env

      - name: build server files
        working-directory: ./BE
        run: |
          npm ci
          npm run build --if-present

      - name: zip file
        run: zip -r poemToday_be.zip ./BE/src ./scripts ./appspec.yml ./BE/.env ./BE/package.json

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./poemToday_be.zip s3://poemtoday/deploy/

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name poem-codedeploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name backend
          --s3-location bucket=poemtoday,bundleType=zip,key=deploy/poemToday_be.zip